#include <iostream>
using namespace std;

char board[3][3]; // 3x3 game board
char currentPlayer;

// Function to initialize the board with numbers 1 to 9
void initializeBoard() {
    char pos = '1';
    for (int i = 0; i < 3; ++i)
        for (int j = 0; j < 3; ++j)
            board[i][j] = pos++;
}

// Function to display the current state of the board
void printBoard() {
    cout << "\n";
    for (int i = 0; i < 3; ++i) {
        cout << " ";
        for (int j = 0; j < 3; ++j) {
            cout << board[i][j];
            if (j < 2) cout << " | ";
        }
        cout << "\n";
        if (i < 2) cout << "---+---+---\n";
    }
    cout << "\n";
}

// Function to check if a move is valid
bool isValidMove(int cell) {
    int row = (cell - 1) / 3;
    int col = (cell - 1) % 3;
    return board[row][col] != 'X' && board[row][col] != 'O';
}

// Function to place a mark on the board
void makeMove(int cell) {
    int row = (cell - 1) / 3;
    int col = (cell - 1) % 3;
    board[row][col] = currentPlayer;
}

// Function to check if the current player has won
bool checkWin() {
    for (int i = 0; i < 3; ++i) {
        // Check rows and columns
        if ((board[i][0] == currentPlayer &&
             board[i][1] == currentPlayer &&
             board[i][2] == currentPlayer) ||
            (board[0][i] == currentPlayer &&
             board[1][i] == currentPlayer &&
             board[2][i] == currentPlayer))
            return true;
    }
    // Check diagonals
    if ((board[0][0] == currentPlayer &&
         board[1][1] == currentPlayer &&
         board[2][2] == currentPlayer) ||
        (board[0][2] == currentPlayer &&
         board[1][1] == currentPlayer &&
         board[2][0] == currentPlayer))
        return true;

    return false;
}

// Function to check if the board is full (draw)
bool isBoardFull() {
    for (int i = 0; i < 3; ++i)
        for (int j = 0; j < 3; ++j)
            if (board[i][j] != 'X' && board[i][j] != 'O')
                return false;
    return true;
}

// Switch turns between X and O
void switchPlayer() {
    currentPlayer = (currentPlayer == 'X') ? 'O' : 'X';
}

int main() {
    int move;
    bool gameOver = false;

    initializeBoard();
    currentPlayer = 'X';

    cout << "=== Tic Tac Toe Game ===\n";
    printBoard();

    while (!gameOver) {
        cout << "Player " << currentPlayer << ", enter a cell number (1-9): ";
        cin >> move;

        if (move < 1 || move > 9 || !isValidMove(move)) {
            cout << "Invalid move. Try again.\n";
            continue;
        }

        makeMove(move);
        printBoard();

        if (checkWin()) {
            cout << "Player " << currentPlayer << " wins!\n";
            gameOver = true;
        } else if (isBoardFull()) {
            cout << "It's a draw!\n";
            gameOver = true;
        } else {
            switchPlayer();
        }
    }

    return 0;
}
